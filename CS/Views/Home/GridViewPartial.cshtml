@functions {
    protected bool GetChecked(GridViewGroupRowTemplateContainer container) {
        for (int i = 0; i < container.Grid.GetChildRowCount(container.VisibleIndex); i++) {
            bool isRowSelected = container.Grid.Selection.IsRowSelectedByKey(container.Grid.GetChildDataRow(container.VisibleIndex, i)["ProductID"]);
            if (!isRowSelected)
                return false;
        }
        return true;
    }
    
    protected string GetCaptionText(GridViewGroupRowTemplateContainer container) {
        string captionText = !string.IsNullOrEmpty(container.Column.Caption) ? container.Column.Caption : container.Column.FieldName;
        return string.Format("{0} : {1} {2}", captionText, container.GroupText, container.SummaryText);
    }
}

@Html.DevExpress().GridView(settings => {
    settings.Name = "GridView";
    settings.KeyFieldName = "ProductID";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartial" };
    settings.CustomActionRouteValues = new { Controller = "Home", Action = "GridViewCustomActionPartial" };

    settings.Settings.ShowGroupPanel = true;
    
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowSelectCheckbox = true;

    settings.Columns.Add("ProductID");
    settings.Columns.Add("ProductName");
    settings.Columns.Add("UnitPrice");
    settings.Columns.Add("UnitsOnOrder").GroupIndex = 0;

    settings.SetGroupRowContentTemplateContent(c => {
        ViewContext.Writer.Write("<table><tr><td>");
        Html.DevExpress().CheckBox(checkBox => {
            checkBox.Name = "checkBox" + c.VisibleIndex.ToString();
            checkBox.Properties.ClientSideEvents.CheckedChanged = string.Format("function(s, e){{ {0}.PerformCallback({{parameters: '{1};' + s.GetChecked()}}); }}", settings.Name, c.VisibleIndex);
            checkBox.Checked = GetChecked(c);
        }).GetHtml();
        ViewContext.Writer.Write("</td><td>");
        Html.DevExpress().Label(label => {
            label.Name = "label" + c.VisibleIndex.ToString();
            label.Text = GetCaptionText(c);
        }).GetHtml();
        ViewContext.Writer.Write("</td></tr></table>");
    });

    settings.BeforeGetCallbackResult += (s, e) => {
        ASPxGridView gridView = (ASPxGridView)s;

        if (ViewData["parameters"] == null)
            return;

        string[] parameters = ViewData["parameters"].ToString().Split(';');
        int index = int.Parse(parameters[0]);
        bool isGroupRowSelected = bool.Parse(parameters[1]);
        for (int i = 0; i < gridView.GetChildRowCount(index); i++) {
            System.Data.DataRow row = gridView.GetChildDataRow(index, i);
            gridView.Selection.SetSelectionByKey(row["ProductID"], isGroupRowSelected);
        }
    };
    //settings.ClientSideEvents.SelectionChanged = "function(s, e) { e.processOnServer = true; }";
}).Bind(Model).GetHtml()